target: document
detect invalid self-references in documents:
  PENDING reject if the self-reference is too direct:
    ? |-
      main:
        _oneOf:
          - piece
          - plant
      piece:
        _in: [grass, leaf, branch, tree]
      plant:
        _oneOf:
          - plant
          - piece
    : contain: plant
    ? |-
      main: aa
      aa: { _merge: [bb] }
      bb: { _oneOf: [aa, cc] }
      cc: string
    : contain: aa
    ? |-
      main: animal
      animal: animal
    : contain: animal
    'main: main':
      contain: main
    ? |-
      main: weather
      weather:
        _merge: [rain, cloud]
      rain:
        _merge: [water, cloud]
      cloud:
        _merge: [water, rain]
      water:
        _map:
          temperature: float
    : contain: cloud
  accept if the self-reference is sufficiently indirect:
    ? |-
      main:
        _listFacultative: [main]
    : {}
    ? |-
      main:
        _mapFacultative: { content: main }
    : {}
    ? |-
      main: animal
      animal:
        _map:
          name: string
          age: string
          eat: edible
      edible:
        _oneOf:
          - _in: [grass, leaves]
          - animal
    : {}
    ? |-
      main: person
      person:
        _map:
          name: string
          mother: person
          father: person
    : {}
  accept indirect even if no finite schema can be matched:
    ? |-
      main:
        _list: [main]
    : {}
    ? |-
      main:
        _listOf: main
    : {}
    ? |-
      main:
        _map: { content: main }
    : {}
    ? |-
      main:
        _mapOf: { main: main }
    : {}
    ? |-
      main:
        _mapOf: { string: main }
    : {}
tell valid documents from invalid documents:
  PENDING reject if a reference cannot be resolved:
    'main: animal':
      contain: animal
  PENDING reject if the target rule (main) is missing:
    'animal: string':
      contain: main
  accept if valid:
    ? |-
      main: animal
      animal: string
    : {}
